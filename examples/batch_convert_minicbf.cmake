function(usage)
  message("usage:")
  message("  CBF_CONVERT_MINICBF_PATH=\"path_to_convert_minicbf_directory\"")
  message("  export CBF_CONVERT_MINICBF_PATH")
  message("  cmake -P batch_convert_minicbf.cbf [input_directory [output_directory\\")
  message("  [name_template [cbf_template]]]]")
endfunction()

foreach(n RANGE ${CMAKE_ARGC})
  if("${CMAKE_ARGV${n}}" STREQUAL "--")
    set(m "0")
  elseif(m GREATER_EQUAL "0")
    math(EXPR m "${m} + 1")
    set(argv${m} "${CMAKE_ARGV${n}}")
  endif()
endforeach()

set(program "convert_minicbf")
if(argv1 STREQUAL "--help")
  usage()
elseif(argv1 STREQUAL "-h")
  usage()
else()
  if(CBF_CONVERT_MINICBF_PATH)
    set(program "${CBF_CONVERT_MINICBF_PATH}/convert_minicbf")
  endif()

  if(argv1)
    set(input_directory "${argv1}")
  else()
    set(input_directory ".")
  endif()

  if(argv2)
    set(output_directory "${argv2}")
  else()
    set(output_directory "./full_cbf")
  endif()

  if(argv3)
    set(name_template "${argv3}")
  else()
    set(name_template "*.cbf")
  endif()

  if(argv4)
    set(cbf_template "-p;${argv4}")
  else()
    set(cbf_template "${argv4}")
  endif()

  message("program:          ${program}")
  message("input_directory:  ${input_directory}")
  message("output_directory: ${output_directory}")
  message("name_template:    ${name_template}")
  message("cbf_template:     ${cbf_template}")

  if(input_directory STREQUAL output_directory)
    message(FATAL_ERROR "The input directory will be clobbered, run aborted.")
  endif()

  message("processing files")
  file(GLOB files "${input_directory}/${name_template}")
  foreach(name ${files})
    get_filename_component(output_name "${name}" NAME)
    message("${program} -i ${name} -o ${output_directory}/${output_name} ${cbf_template}")

    execute_process(
      COMMAND ${program} -i ${name} -o ${output_directory}/${output_name} ${cbf_template}
      ERROR_VARIABLE error
      RESULT_VARIABLE result)
    if (result)
      message(FATAL_ERROR "${program}: ${error}")
    endif()
  endforeach()
  message("completed")
endif()
